import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the factorial function below.
    public static int factorial(int n) {
        /*to solve this, one needs a basic understanding of recursion and factorials. 
    The tutorial that comes with the problem does a really good job of explaining recursion, and I did a quick google search on the formula for factorials. The parameters for this problem state that n <=2<=12. The base case for this problem is if n<=1, it returns 1 because factorial of 0 is 0 and factorial of 1 is 1. the recursive case is the else statement and multiplies n to every number at n-1 till n<=0.
        */
        if(n<=1){
            return 1;
        }
        else{
            return n* factorial(n-1);
        }

    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        int result = factorial(n);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
