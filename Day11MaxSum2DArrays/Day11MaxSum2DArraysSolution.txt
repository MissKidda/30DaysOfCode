import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {



    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {
        int[][] arr = new int[6][6];

        for (int i = 0; i < 6; i++) {
            String[] arrRowItems = scanner.nextLine().split(" ");
            scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

            for (int j = 0; j < 6; j++) {
                int arrItem = Integer.parseInt(arrRowItems[j]);
                arr[i][j] = arrItem;
            }
        }
        /*
       Set maxSum to the lowest value possible. Loop through each possible hourglass matrix and get their sum. If maxSum is less than the new hourGlassSum, maxSum will be the new sum.
        */
       int n=arr.length;
        int hourGlassSum=0;
        int maxSum=Integer.MIN_VALUE;
        for(int i=0;i<n-2;i++){
            for(int j=0;j<n-2;j++){
                hourGlassSum=arr[i][j] + arr[i][j+1] + arr[i][j+2]
                    + arr[i+1][j+1] + arr[i+2][j] + arr[i+2][j+1]
                    + arr[i+2][j+2];
                    if(maxSum<hourGlassSum){
                        maxSum=hourGlassSum;
                    }
            }
        }
        System.out.println(maxSum);
        scanner.close();
    }
}
